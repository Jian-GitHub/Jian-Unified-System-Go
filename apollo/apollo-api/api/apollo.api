syntax = "v1"

info (
	title:   "Apollo-API"
	desc:    "Accounts-API"
	author:  "Jian Qi"
	email:   "e.jianqi@gmail.com"
	version: "v0.0.1"
)

type (
	// 空
	Empty  {}
	// 通用响应
	BaseResponse {
		Code    int    `json:"code"`
		Message string `json:"message"`
	}
)

// Account
type (
	// 注册
	RegReq {
		Email           string `json:"email" validate:"required"`
		Password        string `json:"password" validate:"required"`
		ConfirmPassword string `json:"confirm_password" validate:"required"`
		Language        string `json:"language" validate:"required"`
	}
	RegResp {
		BaseResponse
		RegRespData {
			Token string `json:"token"`
		} `json:"data"`
	}
	// 登录
	LoginReq {
		Email           string `json:"email" validate:"required"`
		Password        string `json:"password" validate:"required"`
		CloudflareToken string `json:"cloudflareToken" validate:"required"`
	}
	LoginResp {
		BaseResponse
		LoginData {
			Token string `json:"token"`
		} `json:"data"`
	}
)

// Account
@server (
	prefix: /v1/account
	group:  account
)
service apollo-api {
	// 注册流程
	@handler Reg
	// 返回: Token
	post /registration (RegReq) returns (RegResp)

	// 登录流程
	@handler Login
	// 返回: Token
	post /login (LoginReq) returns (BaseResponse)
}

// Passkeys
type (
	// 注册-阶段1 请求
	RegStartReq {
		UserName    string `json:"user_name" validate:"required"`
		DisplayName string `json:"display_name"`
	}
	// Data {
	//  OptionsJson string `json:"options_json"` // WebAuthn注册选项
	//  SessionID   string `json:"session_id"` // 会话标识
	// }
	// 注册-阶段1 响应
	RegStartResp {
		BaseResponse
		RegStartRespData {
			OptionsJson string `json:"options_json"` // WebAuthn注册选项
			SessionID   string `json:"session_id"` // 会话标识
		} `json:"data"`
	}
	// 注册-阶段2 请求
	RegFinishReq {
		SessionID  string `json:"session_id" validate:"required"`
		Credential string `json:"credential" validate:"required"` // 前端返回的认证数据
		Language   string `json:"language" validate:"required"`
	}
	// 注册-阶段2 响应
	RegFinishResp {
		BaseResponse
		RegFinishRespData {
			Token string `json:"token"`
		} `json:"data"`
	}
	// 登录-阶段1 请求
	// LoginStartReq  {}
	// 登录-阶段1 响应
	LoginStartResp {
		BaseResponse
		LoginStartRespData {
			OptionsJson string `json:"options_json"` // WebAuthn注册选项
			SessionID   string `json:"session_id"` // 会话标识
		} `json:"data"`
	}
	// 登录-阶段2 请求
	LoginFinishReq {
		SessionID string `json:"session_id" validate:"required"`
		Assertion string `json:"assertion" validate:"required"` // 前端返回的断言数据
	}
	// 登录-阶段2 响应
	LoginFinishResp {
		BaseResponse
		LoginFinishRespData {
			Token string `json:"token"`
		} `json:"data"`
	}
)

// 注册路由
@server (
	prefix: /v1/passkeys
	group:  passkeys
)
service apollo-api {
	// 注册流程
	@handler RegStart
	// 返回:
	//   1. WebAuthn注册选项 - OptionsJson string `json:"options_json"`
	//   2. 会话标识 - SessionID   string `json:"session_id"`
	post /registration/start (RegStartReq) returns (RegStartResp)

	@handler RegFinish
	// 返回: Token
	post /registration/finish (RegFinishReq) returns (RegFinishResp)

	// 登录流程
	@handler LoginStart
	// 返回:
	//   1. WebAuthn注册选项 - OptionsJson string `json:"options_json"`
	//   2. 会话标识 - SessionID   string `json:"session_id"`
	post /login/start (Empty) returns (LoginStartResp)

	@handler LoginFinish
	// 返回: Token
	post /login/finish (LoginFinishReq) returns (LoginFinishResp)
}

type (
	VerifyTokenReq {
		Token string `json:"token"`
	}
	VerifyTokenResp {
		BaseResponse
		Data {
			Test bool `json:"test"`
		} `json:"data"`
	}
)

@server (
	prefix: /v1/account
	group:  account
	jwt:    Auth
// middleware: JWTVerifyAgentMiddleware
)
service apollo-api {
	// 验证Token
	@handler VerifyToken
	// 返回: Token
	post /VerifyToken (VerifyTokenReq) returns (VerifyTokenResp)
}

// Third Party
type (
	ContinueReq {
		Provider string `json:"provider" validate:"required"`
	}
	ContinueResp {
		BaseResponse
		ContinueRespData {
			Url string `json:"url"`
		} `json:"data"`
	}
	BindReq {
		Provider string `json:"provider" validate:"required"`
	}
	BindResp {
		BaseResponse
		BindRespData {
			Url string `json:"url"`
		} `json:"data"`
	}
	CallbackReq {
		Provider string `path:"provider" validate:"required"`
		State    string `form:"state" validate:"required"`
		Code     string `form:"code" validate:"required"`
	}
	CallbackResp {
		BaseResponse
		CallbackRespData {
			Token string `json:"token"`
		} `json:"data"`
	}
)

@server (
	prefix: /v1/thirdParty
	group:  thirdParty
)
service apollo-api {
	// Request Continue via Third-Party
	@handler Continue
	// Return: Redirect URL
	post /Continue (ContinueReq) returns (ContinueResp)

	// CallBack
	@handler Callback
	// Return: Token
	post /Callback/:provider (CallbackReq) returns (CallbackResp)
}

@server (
	prefix: /v1/thirdParty
	group:  thirdParty
	jwt:    Auth
)
service apollo-api {
	@handler Bind
	// Return: Redirect URL
	post /BindReq (BindReq) returns (BindResp)
}

