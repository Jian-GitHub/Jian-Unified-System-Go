syntax = "v1"

info (
	title:   "Apollo-API"
	desc:    "Accounts-API"
	author:  "Jian Qi"
	email:   "e.jianqi@gmail.com"
	version: "v0.0.1"
)

type (
	// 空
	Empty  {}
	// 通用响应
	BaseResponse {
		Code    int    `json:"code"`
		Message string `json:"message"`
	}
	RespnseDate {
		Year  int64 `json:"year"`
		Month int64 `json:"month"`
		Day   int64 `json:"day"`
	}
	UserName {
		GivenName  string `json:"givenName"`
		MiddleName string `json:"middleName"`
		FamilyName string `json:"familyName"`
	}
)

// Account
type (
	// 注册
	RegReq {
		Email           string `json:"email" validate:"required"`
		Password        string `json:"password" validate:"required"`
		ConfirmPassword string `json:"confirm_password" validate:"required"`
		Language        string `json:"language" validate:"required"`
	}
	RegResp {
		BaseResponse
		RegRespData {
			Token string `json:"token"`
		} `json:"data"`
	}
	// 登录
	LoginReq {
		Email           string `json:"email" validate:"required"`
		Password        string `json:"password" validate:"required"`
		CloudflareToken string `json:"cloudflareToken" validate:"required"`
	}
	LoginResp {
		BaseResponse
		LoginData {
			Token    string      `json:"token"`
			Id       string      `json:"id"`
			Name     UserName    `json:"name"`
			Avatar   string      `json:"avatar"`
			Locale   string      `json:"locale"`
			Language string      `json:"language"`
			Birthday RespnseDate `json:"birthday"`
		} `json:"data"`
	}
)

// Account
@server (
	prefix: /v1/account
	group:  account
)
service apollo-api {
	// 注册流程
	@handler Reg
	// 返回: Token
	post /registration (RegReq) returns (RegResp)

	// 登录流程
	@handler Login
	// 返回: Token
	post /login (LoginReq) returns (LoginResp)
}

// Passkeys
type (
	// 注册-阶段1 请求
	RegStartReq {
		UserName    string `json:"user_name" validate:"required"`
		DisplayName string `json:"display_name"`
	}
	// Data {
	//  OptionsJson string `json:"options_json"` // WebAuthn注册选项
	//  SessionID   string `json:"session_id"` // 会话标识
	// }
	// 注册-阶段1 响应
	RegStartResp {
		BaseResponse
		RegStartRespData {
			OptionsJson string `json:"options_json"` // WebAuthn注册选项
			SessionID   string `json:"session_id"` // 会话标识
		} `json:"data"`
	}
	// 注册-阶段2 请求
	RegFinishReq {
		SessionID  string `json:"session_id" validate:"required"`
		Credential string `json:"credential" validate:"required"` // 前端返回的认证数据
		Language   string `json:"language" validate:"required"`
	}
	// 注册-阶段2 响应
	RegFinishResp {
		BaseResponse
		RegFinishRespData {
			Token string `json:"token"`
		} `json:"data"`
	}
	// 登录-阶段1 请求
	// LoginStartReq  {}
	// 登录-阶段1 响应
	LoginStartResp {
		BaseResponse
		LoginStartRespData {
			OptionsJson string `json:"options_json"` // WebAuthn注册选项
			SessionID   string `json:"session_id"` // 会话标识
		} `json:"data"`
	}
	// 登录-阶段2 请求
	LoginFinishReq {
		SessionID string `json:"session_id" validate:"required"`
		Assertion string `json:"assertion" validate:"required"` // 前端返回的断言数据
	}
	// 登录-阶段2 响应
	LoginFinishResp {
		BaseResponse
		LoginFinishRespData {
			Token    string      `json:"token"`
			Id       string      `json:"id"`
			Name     UserName    `json:"name"`
			Avatar   string      `json:"avatar"`
			Locale   string      `json:"locale"`
			Language string      `json:"language"`
			Birthday RespnseDate `json:"birthday"`
		} `json:"data"`
	}
)

// 注册路由
@server (
	prefix: /v1/passkeys
	group:  passkeys
)
service apollo-api {
	// 注册流程
	@handler RegStart
	// 返回:
	//   1. WebAuthn注册选项 - OptionsJson string `json:"options_json"`
	//   2. 会话标识 - SessionID   string `json:"session_id"`
	post /registration/start (RegStartReq) returns (RegStartResp)

	@handler RegFinish
	// 返回: Token
	post /registration/finish (RegFinishReq) returns (RegFinishResp)

	// 登录流程
	@handler LoginStart
	// 返回:
	//   1. WebAuthn注册选项 - OptionsJson string `json:"options_json"`
	//   2. 会话标识 - SessionID   string `json:"session_id"`
	post /login/start (Empty) returns (LoginStartResp)

	@handler LoginFinish
	// 返回: Token
	post /login/finish (LoginFinishReq) returns (LoginFinishResp)
}

type (
	// 绑定-阶段1 请求
	BindStartReq {
		Name string `json:"name" validate:"required"`
	}
	// 绑定-阶段1 响应
	BindStartResp {
		BaseResponse
		BindStartRespData {
			OptionsJson string `json:"options_json"` // WebAuthn注册选项
			SessionID   string `json:"session_id"` // 会话标识
		} `json:"data"`
	}
	// 绑定-阶段2 请求
	BindFinishReq {
		Name       string `json:"name"`
		SessionID  string `json:"session_id" validate:"required"`
		Credential string `json:"credential" validate:"required"` // 前端返回的认证数据
	}
	// 绑定-阶段2 响应
	BindFinishResp {
		BaseResponse
		BindFinishRespData {
			id   string      `json:"id"`
			Name string      `json:"name"`
			Date RespnseDate `json:"date"`
		} `json:"data"`
	}
)

// 注册路由
@server (
	prefix: /v1/passkeys
	group:  passkeys
	jwt:    Auth
)
service apollo-api {
	// BindStart 绑定通行密钥 - 第一步
	@handler BindStart
	// 返回:
	//   1. WebAuthn 绑定选项 - OptionsJson string `json:"options_json"`
	//   2. 会话标识 - SessionID   string `json:"session_id"`
	post /bind/start (BindStartReq) returns (BindStartResp)

	// BindFinish 绑定通行密钥 - 第二步
	@handler BindFinish
	// 返回: Passkeys Info
	post /bind/finish (BindFinishReq) returns (BindFinishResp)
}

type (
	// 获取用户信息
	GetUserInfoReq  {}
	GetUserInfoResp {
		BaseResponse
		GetUserInfoData {
			Id                string `json:"id"`
			GivenName         string `json:"given_name"`
			MiddleName        string `json:"middle_name"`
			FamilyName        string `json:"family_name"`
			Avatar            string `json:"avatar"`
			BirthdayYear      int64  `json:"birthday_year"`
			BirthdayMonth     int64  `json:"birthday_month"`
			BirthdayDay       int64  `json:"birthday_day"`
			NotificationEmail string `json:"notification_email"`
			Locate            string `json:"locate"`
			Language          string `json:"language"`
			CreateTime        string `json:"create_time"`
			LastLoginTime     string `json:"last_login_time"`
		} `json:"data"`
	}
	// 获取用户安全信息
	GetUserSecurityInfoReq  {}
	UserContact {
		Id          string `json:"id"`
		Value       string `json:"value"`
		Type        int64  `json:"type"`
		PhoneRegion string `json:"phoneRegion"`
	}
	GetUserSecurityInfoResp {
		BaseResponse
		GetUserSecurityInfoData {
			Contacts []UserContact `json:"contacts"`
			PasswordUpdatedDate {
				Year  int64 `json:"year"`
				Month int64 `json:"month"`
				Day   int64 `json:"day"`
			} `json:"passwordUpdatedDate"`
			AccountSecurityTokenNum int64 `json:"accountSecurityTokenNum"`
			PasskeysNum             int64 `json:"passkeysNum"`
			ThirdPartyAccounts {
				github bool `json:"github"`
				google bool `json:"google"`
			} `json:"thirdPartyAccounts"`
		} `json:"data"`
	}
	VerifyTokenReq  {}
	VerifyTokenResp {
		BaseResponse
		Data {
			Ok bool `json:"ok"`
		} `json:"data"`
	}
)

@server (
	prefix: /v1/account
	group:  account
	jwt:    Auth
// middleware: JWTVerifyAgentMiddleware
)
service apollo-api {
	// Get User Info
	@handler GetUserInfo
	// 返回: UserInfo
	post /GetUserInfo (GetUserInfoReq) returns (GetUserInfoResp)

	// Get User Security Info
	@handler GetUserSecurityInfo
	// 返回: UserInfo
	post /GetUserSecurityInfo (GetUserSecurityInfoReq) returns (GetUserSecurityInfoResp)

	// Verify Account Token
	@handler verifyToken
	post /VerifyToken (VerifyTokenReq) returns (VerifyTokenResp)
}

// User Account Security
type (
	SubsystemToken {
		Id    string      `json:"id"`
		Value string      `json:"value"`
		Name  string      `json:"name"`
		Date  RespnseDate `json:"date"`
	}
	// 生成令牌
	GenerateSubsystemTokenReq {
		Name  string  `json:"name"`
		Scope []int64 `json:"scope" validate:"required"`
	}
	GenerateSubsystemTokenResp {
		BaseResponse
		GenerateSubsystemTokenData {
			Token SubsystemToken `json:"token"`
		} `json:"data"`
	}
	// 查询 10 个子系统令牌
	GetTenSubsystemTokensReq {
		Page int64 `json:"page"`
	}
	GetTenSubsystemTokensResp {
		BaseResponse
		GetAllSubsystemTokensData {
			Tokens []SubsystemToken `json:"tokens"`
		} `json:"data"`
	}
	// 移除令牌
	RemoveSubsystemTokenReq {
		id int64 `json:"id" validate:"required`
	}
	RemoveSubsystemTokenResp {
		BaseResponse
		RemoveSubsystemTokenData {
			Ok bool `json:"ok"`
		} `json:"data"`
	}
	Passkey {
		Id        string      `json:"id"`
		Name      string      `json:"name"`
		Date      RespnseDate `json:"date"`
		IsEnabled bool        `json:"isEnabled"`
	}
	// 查询 10 个 Passkeys
	GetTenPasskeysReq {
		Page int64 `json:"page"`
	}
	GetTenPasskeysResp {
		BaseResponse
		GetTenPasskeysData {
			Passkeys []Passkey `json:"passkeys"`
		} `json:"data"`
	}
	// 移除 Passkey
	RemovePasskeyReq {
		id int64 `json:"id" validate:"required`
	}
	RemovePasskeyResp {
		BaseResponse
		RemovePasskeyData {
			Ok bool `json:"ok"`
		} `json:"data"`
	}
)

@server (
	prefix: /v1/account/security
	group:  account/security
	jwt:    Auth
)
service apollo-api {
	@handler GenerateSubsystemToken
	// 返回: Token
	post /GenerateSubsystemToken (GenerateSubsystemTokenReq) returns (GenerateSubsystemTokenResp)

	// Remove Subsystem Token
	@handler RemoveSubsystemToken
	// 返回: ok
	post /RemoveSubsystemToken (RemoveSubsystemTokenReq) returns (RemoveSubsystemTokenResp)

	// Get 10 Subsystem Tokens
	@handler GetTenSubsystemTokens
	// 返回: tokens
	post /GetTenSubsystemTokens (GetTenSubsystemTokensReq) returns (GetTenSubsystemTokensResp)

	// Remove Passkey
	@handler RemovePasskey
	// 返回: ok
	post /RemovePasskey (RemovePasskeyReq) returns (RemovePasskeyResp)

	// Get 10 Subsystem Tokens
	@handler GetTenPasskeys
	// 返回: Passkeys
	post /GetTenPasskeys (GetTenPasskeysReq) returns (GetTenPasskeysResp)
}

// Third Party
type (
	ThirdPartyAccount {
		Id       int64  `json:"id"`
		Provider string `json:"provider"`
		Content  string `json:"content"`
	}
	GetInfoReq  {}
	GetInfoResp {
		BaseResponse
		GetInfoRespData {
			Accounts []ThirdPartyAccount `json:"accounts"`
		} `json:"data"`
	}
	ContinueReq {
		Provider string `json:"provider" validate:"required"`
	}
	ContinueResp {
		BaseResponse
		ContinueRespData {
			Url string `json:"url"`
		} `json:"data"`
	}
	BindReq {
		Provider string `json:"provider" validate:"required"`
	}
	BindResp {
		BaseResponse
		BindRespData {
			Url string `json:"url"`
		} `json:"data"`
	}
	CallbackReq {
		Provider string `path:"provider" validate:"required"`
		State    string `form:"state" validate:"required"`
		Code     string `form:"code" validate:"required"`
	}
	CallbackResp {
		BaseResponse
		CallbackRespData {
			Token string `json:"token"`
		} `json:"data"`
	}
	RemoveReq {
		ThirdPartyId int64 `json:"thirdPartyId" validate:"required`
	}
	RemoveResp {
		BaseResponse
		RemoveRespData {
			Ok bool `json:"ok"`
		} `json:"data"`
	}
)

@server (
	prefix: /v1/thirdParty
	group:  thirdParty
)
service apollo-api {
	// Request Continue via Third-Party
	@handler Continue
	// Return: Redirect URL
	post /Continue (ContinueReq) returns (ContinueResp)

	// CallBack
	@handler Callback
	// Return: Token
	get /Callback/:provider (CallbackReq) returns (CallbackResp)
}

@server (
	prefix: /v1/thirdParty
	group:  thirdParty
	jwt:    Auth
)
service apollo-api {
	@handler GetInfo
	// Return: []ThirdPartyAccount
	post /GetInfo (Empty) returns (GetInfoResp)

	@handler Bind
	// Return: Redirect URL
	post /Bind (BindReq) returns (BindResp)

	@handler Remove
	// Return: status
	post /Remove (RemoveReq) returns (RemoveResp)
}

