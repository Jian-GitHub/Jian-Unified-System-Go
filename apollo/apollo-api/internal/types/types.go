// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.0

package types

type BaseResponse struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

type BindReq struct {
	Provider string `json:"provider" validate:"required"`
}

type BindResp struct {
	BaseResponse
	BindRespData struct {
		Url string `json:"url"`
	} `json:"data"`
}

type CallbackReq struct {
	Provider string `path:"provider" validate:"required"`
	State    string `form:"state" validate:"required"`
	Code     string `form:"code" validate:"required"`
}

type CallbackResp struct {
	BaseResponse
	CallbackRespData struct {
		Token string `json:"token"`
	} `json:"data"`
}

type ContinueReq struct {
	Provider string `json:"provider" validate:"required"`
}

type ContinueResp struct {
	BaseResponse
	ContinueRespData struct {
		Url string `json:"url"`
	} `json:"data"`
}

type Empty struct {
}

type GenerateTokenReq struct {
	Name  string  `json:"name"`
	Scope []int64 `json:"scope" validate:"required"`
}

type GenerateTokenResp struct {
	BaseResponse
	GenerateTokenData struct {
		Token string `json:"token"`
	} `json:"data"`
}

type GetUserInfoReq struct {
}

type GetUserInfoResp struct {
	BaseResponse
	GetUserInfoData struct {
		Id                int64  `db:"id"`
		GivenName         string `db:"given_name"`
		MiddleName        string `db:"middle_name"`
		FamilyName        string `db:"family_name"`
		Avatar            string `db:"avatar"`
		BirthdayYear      int64  `db:"birthday_year"`
		BirthdayMonth     int64  `db:"birthday_month"`
		BirthdayDay       int64  `db:"birthday_day"`
		NotificationEmail string `db:"notification_email"`
		Locate            string `db:"locate"`
		Language          string `db:"language"`
		CreateTime        string `db:"create_time"`
		LastLoginTime     string `db:"last_login_time"`
	} `json:"data"`
}

type LoginFinishReq struct {
	SessionID string `json:"session_id" validate:"required"`
	Assertion string `json:"assertion" validate:"required"` // 前端返回的断言数据
}

type LoginFinishResp struct {
	BaseResponse
	LoginFinishRespData struct {
		Token string `json:"token"`
	} `json:"data"`
}

type LoginReq struct {
	Email           string `json:"email" validate:"required"`
	Password        string `json:"password" validate:"required"`
	CloudflareToken string `json:"cloudflareToken" validate:"required"`
}

type LoginResp struct {
	BaseResponse
	LoginData struct {
		Token string `json:"token"`
		Id    string `json:"id"`
		Name  struct {
			GivenName  string `json:"givenName"`
			MiddleName string `json:"middleName"`
			FamilyName string `json:"familyName"`
		} `json:"name"`
		Avatar   string `json:"avatar"`
		Locale   string `json:"locale"`
		Language string `json:"language"`
	} `json:"data"`
}

type LoginStartResp struct {
	BaseResponse
	LoginStartRespData struct {
		OptionsJson string `json:"options_json"` // WebAuthn注册选项
		SessionID   string `json:"session_id"`   // 会话标识
	} `json:"data"`
}

type RegFinishReq struct {
	SessionID  string `json:"session_id" validate:"required"`
	Credential string `json:"credential" validate:"required"` // 前端返回的认证数据
	Language   string `json:"language" validate:"required"`
}

type RegFinishResp struct {
	BaseResponse
	RegFinishRespData struct {
		Token string `json:"token"`
	} `json:"data"`
}

type RegReq struct {
	Email           string `json:"email" validate:"required"`
	Password        string `json:"password" validate:"required"`
	ConfirmPassword string `json:"confirm_password" validate:"required"`
	Language        string `json:"language" validate:"required"`
}

type RegResp struct {
	BaseResponse
	RegRespData struct {
		Token string `json:"token"`
	} `json:"data"`
}

type RegStartReq struct {
	UserName    string `json:"user_name" validate:"required"`
	DisplayName string `json:"display_name"`
}

type RegStartResp struct {
	BaseResponse
	RegStartRespData struct {
		OptionsJson string `json:"options_json"` // WebAuthn注册选项
		SessionID   string `json:"session_id"`   // 会话标识
	} `json:"data"`
}

type VerifyTokenReq struct {
}

type VerifyTokenResp struct {
	BaseResponse
	Data struct {
		Ok bool `json:"ok"`
	} `json:"data"`
}
