// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.0
// Source: apollo-rpc.proto

package passkeys

import (
	"context"

	"jian-unified-system/apollo/apollo-rpc/apollo"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Empty                          = apollo.Empty
	FindTenSubsystemTokensReq      = apollo.FindTenSubsystemTokensReq
	FindTenSubsystemTokensResp     = apollo.FindTenSubsystemTokensResp
	GenerateSubsystemTokenReq      = apollo.GenerateSubsystemTokenReq
	GenerateSubsystemTokenResp     = apollo.GenerateSubsystemTokenResp
	LoginReq                       = apollo.LoginReq
	LoginResp                      = apollo.LoginResp
	PasskeysFinishLoginReq         = apollo.PasskeysFinishLoginReq
	PasskeysFinishLoginResp        = apollo.PasskeysFinishLoginResp
	PasskeysFinishRegistrationReq  = apollo.PasskeysFinishRegistrationReq
	PasskeysFinishRegistrationResp = apollo.PasskeysFinishRegistrationResp
	PasskeysStartLoginResp         = apollo.PasskeysStartLoginResp
	PasskeysStartRegistrationReq   = apollo.PasskeysStartRegistrationReq
	PasskeysStartRegistrationResp  = apollo.PasskeysStartRegistrationResp
	PasswordUpdatedDate            = apollo.PasswordUpdatedDate
	RegistrationReq                = apollo.RegistrationReq
	RemoveSubsystemTokenReq        = apollo.RemoveSubsystemTokenReq
	RemoveSubsystemTokenResp       = apollo.RemoveSubsystemTokenResp
	SubsystemToken                 = apollo.SubsystemToken
	ThirdPartyAccounts             = apollo.ThirdPartyAccounts
	ThirdPartyBindReq              = apollo.ThirdPartyBindReq
	ThirdPartyContinueReq          = apollo.ThirdPartyContinueReq
	ThirdPartyContinueResp         = apollo.ThirdPartyContinueResp
	UserContact                    = apollo.UserContact
	UserInfoReq                    = apollo.UserInfoReq
	UserInfoResp                   = apollo.UserInfoResp
	UserSecurityInfoReq            = apollo.UserSecurityInfoReq
	UserSecurityInfoResp           = apollo.UserSecurityInfoResp
	ValidateSubsystemTokenReq      = apollo.ValidateSubsystemTokenReq
	ValidateSubsystemTokenResp     = apollo.ValidateSubsystemTokenResp

	Passkeys interface {
		// 注册
		StartRegistration(ctx context.Context, in *PasskeysStartRegistrationReq, opts ...grpc.CallOption) (*PasskeysStartRegistrationResp, error)
		// FinishRegistration 注册第二步 - 完成
		FinishRegistration(ctx context.Context, in *PasskeysFinishRegistrationReq, opts ...grpc.CallOption) (*PasskeysFinishRegistrationResp, error)
		// 登录
		StartLogin(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*PasskeysStartLoginResp, error)
		// FinishLogin 登陆第二步 - 完成 返回用户id
		FinishLogin(ctx context.Context, in *PasskeysFinishLoginReq, opts ...grpc.CallOption) (*PasskeysFinishLoginResp, error)
	}

	defaultPasskeys struct {
		cli zrpc.Client
	}
)

func NewPasskeys(cli zrpc.Client) Passkeys {
	return &defaultPasskeys{
		cli: cli,
	}
}

// 注册
func (m *defaultPasskeys) StartRegistration(ctx context.Context, in *PasskeysStartRegistrationReq, opts ...grpc.CallOption) (*PasskeysStartRegistrationResp, error) {
	client := apollo.NewPasskeysClient(m.cli.Conn())
	return client.StartRegistration(ctx, in, opts...)
}

// FinishRegistration 注册第二步 - 完成
func (m *defaultPasskeys) FinishRegistration(ctx context.Context, in *PasskeysFinishRegistrationReq, opts ...grpc.CallOption) (*PasskeysFinishRegistrationResp, error) {
	client := apollo.NewPasskeysClient(m.cli.Conn())
	return client.FinishRegistration(ctx, in, opts...)
}

// 登录
func (m *defaultPasskeys) StartLogin(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*PasskeysStartLoginResp, error) {
	client := apollo.NewPasskeysClient(m.cli.Conn())
	return client.StartLogin(ctx, in, opts...)
}

// FinishLogin 登陆第二步 - 完成 返回用户id
func (m *defaultPasskeys) FinishLogin(ctx context.Context, in *PasskeysFinishLoginReq, opts ...grpc.CallOption) (*PasskeysFinishLoginResp, error) {
	client := apollo.NewPasskeysClient(m.cli.Conn())
	return client.FinishLogin(ctx, in, opts...)
}
