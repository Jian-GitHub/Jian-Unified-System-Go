// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.0
// Source: apollo-rpc.proto

package security

import (
	"context"

	"jian-unified-system/apollo/apollo-rpc/apollo"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Empty                         = apollo.Empty
	GenerateSubsystemTokenReq     = apollo.GenerateSubsystemTokenReq
	GenerateSubsystemTokenResp    = apollo.GenerateSubsystemTokenResp
	LoginReq                      = apollo.LoginReq
	LoginResp                     = apollo.LoginResp
	PasskeysFinishLoginReq        = apollo.PasskeysFinishLoginReq
	PasskeysFinishLoginResp       = apollo.PasskeysFinishLoginResp
	PasskeysFinishRegistrationReq = apollo.PasskeysFinishRegistrationReq
	PasskeysStartLoginResp        = apollo.PasskeysStartLoginResp
	PasskeysStartRegistrationReq  = apollo.PasskeysStartRegistrationReq
	PasskeysStartRegistrationResp = apollo.PasskeysStartRegistrationResp
	PasswordUpdatedDate           = apollo.PasswordUpdatedDate
	RegistrationReq               = apollo.RegistrationReq
	RemoveSubsystemTokenReq       = apollo.RemoveSubsystemTokenReq
	RemoveSubsystemTokenResp      = apollo.RemoveSubsystemTokenResp
	ThirdPartyAccounts            = apollo.ThirdPartyAccounts
	ThirdPartyBindReq             = apollo.ThirdPartyBindReq
	ThirdPartyContinueReq         = apollo.ThirdPartyContinueReq
	ThirdPartyContinueResp        = apollo.ThirdPartyContinueResp
	UserContact                   = apollo.UserContact
	UserInfoReq                   = apollo.UserInfoReq
	UserInfoResp                  = apollo.UserInfoResp
	UserSecurityInfoReq           = apollo.UserSecurityInfoReq
	UserSecurityInfoResp          = apollo.UserSecurityInfoResp
	ValidateSubsystemTokenReq     = apollo.ValidateSubsystemTokenReq
	ValidateSubsystemTokenResp    = apollo.ValidateSubsystemTokenResp

	Security interface {
		// 生成子系统令牌
		GenerateSubsystemToken(ctx context.Context, in *GenerateSubsystemTokenReq, opts ...grpc.CallOption) (*GenerateSubsystemTokenResp, error)
		// 验证子系统令牌
		ValidateSubsystemToken(ctx context.Context, in *ValidateSubsystemTokenReq, opts ...grpc.CallOption) (*ValidateSubsystemTokenResp, error)
		// 移除子系统令牌
		RemoveSubsystemToken(ctx context.Context, in *RemoveSubsystemTokenReq, opts ...grpc.CallOption) (*RemoveSubsystemTokenResp, error)
	}

	defaultSecurity struct {
		cli zrpc.Client
	}
)

func NewSecurity(cli zrpc.Client) Security {
	return &defaultSecurity{
		cli: cli,
	}
}

// 生成子系统令牌
func (m *defaultSecurity) GenerateSubsystemToken(ctx context.Context, in *GenerateSubsystemTokenReq, opts ...grpc.CallOption) (*GenerateSubsystemTokenResp, error) {
	client := apollo.NewSecurityClient(m.cli.Conn())
	return client.GenerateSubsystemToken(ctx, in, opts...)
}

// 验证子系统令牌
func (m *defaultSecurity) ValidateSubsystemToken(ctx context.Context, in *ValidateSubsystemTokenReq, opts ...grpc.CallOption) (*ValidateSubsystemTokenResp, error) {
	client := apollo.NewSecurityClient(m.cli.Conn())
	return client.ValidateSubsystemToken(ctx, in, opts...)
}

// 移除子系统令牌
func (m *defaultSecurity) RemoveSubsystemToken(ctx context.Context, in *RemoveSubsystemTokenReq, opts ...grpc.CallOption) (*RemoveSubsystemTokenResp, error) {
	client := apollo.NewSecurityClient(m.cli.Conn())
	return client.RemoveSubsystemToken(ctx, in, opts...)
}
