// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.0
// Source: apollo-rpc.proto

package security

import (
	"context"

	"jian-unified-system/apollo/apollo-rpc/apollo"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Empty                          = apollo.Empty
	FindTenPasskeysReq             = apollo.FindTenPasskeysReq
	FindTenPasskeysResp            = apollo.FindTenPasskeysResp
	FindTenSubsystemTokensReq      = apollo.FindTenSubsystemTokensReq
	FindTenSubsystemTokensResp     = apollo.FindTenSubsystemTokensResp
	GenerateSubsystemTokenReq      = apollo.GenerateSubsystemTokenReq
	GenerateSubsystemTokenResp     = apollo.GenerateSubsystemTokenResp
	LoginReq                       = apollo.LoginReq
	LoginResp                      = apollo.LoginResp
	Passkey                        = apollo.Passkey
	PasskeysFinishLoginReq         = apollo.PasskeysFinishLoginReq
	PasskeysFinishLoginResp        = apollo.PasskeysFinishLoginResp
	PasskeysFinishRegistrationReq  = apollo.PasskeysFinishRegistrationReq
	PasskeysFinishRegistrationResp = apollo.PasskeysFinishRegistrationResp
	PasskeysStartLoginResp         = apollo.PasskeysStartLoginResp
	PasskeysStartRegistrationReq   = apollo.PasskeysStartRegistrationReq
	PasskeysStartRegistrationResp  = apollo.PasskeysStartRegistrationResp
	PasswordUpdatedDate            = apollo.PasswordUpdatedDate
	RegistrationReq                = apollo.RegistrationReq
	RemovePasskeyReq               = apollo.RemovePasskeyReq
	RemovePasskeyResp              = apollo.RemovePasskeyResp
	RemoveSubsystemTokenReq        = apollo.RemoveSubsystemTokenReq
	RemoveSubsystemTokenResp       = apollo.RemoveSubsystemTokenResp
	SubsystemToken                 = apollo.SubsystemToken
	ThirdPartyAccountInfo          = apollo.ThirdPartyAccountInfo
	ThirdPartyAccounts             = apollo.ThirdPartyAccounts
	ThirdPartyBindReq              = apollo.ThirdPartyBindReq
	ThirdPartyContinueReq          = apollo.ThirdPartyContinueReq
	ThirdPartyContinueResp         = apollo.ThirdPartyContinueResp
	ThirdPartyGetInfoReq           = apollo.ThirdPartyGetInfoReq
	ThirdPartyGetInfoResp          = apollo.ThirdPartyGetInfoResp
	ThirdPartyRemoveReq            = apollo.ThirdPartyRemoveReq
	UserContact                    = apollo.UserContact
	UserInfoReq                    = apollo.UserInfoReq
	UserInfoResp                   = apollo.UserInfoResp
	UserSecurityInfoReq            = apollo.UserSecurityInfoReq
	UserSecurityInfoResp           = apollo.UserSecurityInfoResp
	ValidateSubsystemTokenReq      = apollo.ValidateSubsystemTokenReq
	ValidateSubsystemTokenResp     = apollo.ValidateSubsystemTokenResp

	Security interface {
		// GenerateSubsystemToken 生成子系统令牌
		GenerateSubsystemToken(ctx context.Context, in *GenerateSubsystemTokenReq, opts ...grpc.CallOption) (*GenerateSubsystemTokenResp, error)
		// ValidateSubsystemToken 验证子系统令牌
		ValidateSubsystemToken(ctx context.Context, in *ValidateSubsystemTokenReq, opts ...grpc.CallOption) (*ValidateSubsystemTokenResp, error)
		// RemoveSubsystemToken 移除子系统令牌
		RemoveSubsystemToken(ctx context.Context, in *RemoveSubsystemTokenReq, opts ...grpc.CallOption) (*RemoveSubsystemTokenResp, error)
		// FindTenSubsystemTokens 查询 10 个子系统令牌
		FindTenSubsystemTokens(ctx context.Context, in *FindTenSubsystemTokensReq, opts ...grpc.CallOption) (*FindTenSubsystemTokensResp, error)
	}

	defaultSecurity struct {
		cli zrpc.Client
	}
)

func NewSecurity(cli zrpc.Client) Security {
	return &defaultSecurity{
		cli: cli,
	}
}

// GenerateSubsystemToken 生成子系统令牌
func (m *defaultSecurity) GenerateSubsystemToken(ctx context.Context, in *GenerateSubsystemTokenReq, opts ...grpc.CallOption) (*GenerateSubsystemTokenResp, error) {
	client := apollo.NewSecurityClient(m.cli.Conn())
	return client.GenerateSubsystemToken(ctx, in, opts...)
}

// ValidateSubsystemToken 验证子系统令牌
func (m *defaultSecurity) ValidateSubsystemToken(ctx context.Context, in *ValidateSubsystemTokenReq, opts ...grpc.CallOption) (*ValidateSubsystemTokenResp, error) {
	client := apollo.NewSecurityClient(m.cli.Conn())
	return client.ValidateSubsystemToken(ctx, in, opts...)
}

// RemoveSubsystemToken 移除子系统令牌
func (m *defaultSecurity) RemoveSubsystemToken(ctx context.Context, in *RemoveSubsystemTokenReq, opts ...grpc.CallOption) (*RemoveSubsystemTokenResp, error) {
	client := apollo.NewSecurityClient(m.cli.Conn())
	return client.RemoveSubsystemToken(ctx, in, opts...)
}

// FindTenSubsystemTokens 查询 10 个子系统令牌
func (m *defaultSecurity) FindTenSubsystemTokens(ctx context.Context, in *FindTenSubsystemTokensReq, opts ...grpc.CallOption) (*FindTenSubsystemTokensResp, error) {
	client := apollo.NewSecurityClient(m.cli.Conn())
	return client.FindTenSubsystemTokens(ctx, in, opts...)
}
