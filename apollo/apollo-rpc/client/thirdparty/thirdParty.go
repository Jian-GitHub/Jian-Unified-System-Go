// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.0
// Source: apollo-rpc.proto

package thirdparty

import (
	"context"

	"jian-unified-system/apollo/apollo-rpc/apollo"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Empty                          = apollo.Empty
	FindTenPasskeysReq             = apollo.FindTenPasskeysReq
	FindTenPasskeysResp            = apollo.FindTenPasskeysResp
	FindTenSubsystemTokensReq      = apollo.FindTenSubsystemTokensReq
	FindTenSubsystemTokensResp     = apollo.FindTenSubsystemTokensResp
	GenerateSubsystemTokenReq      = apollo.GenerateSubsystemTokenReq
	GenerateSubsystemTokenResp     = apollo.GenerateSubsystemTokenResp
	LoginReq                       = apollo.LoginReq
	LoginResp                      = apollo.LoginResp
	Passkey                        = apollo.Passkey
	PasskeysFinishLoginReq         = apollo.PasskeysFinishLoginReq
	PasskeysFinishLoginResp        = apollo.PasskeysFinishLoginResp
	PasskeysFinishRegistrationReq  = apollo.PasskeysFinishRegistrationReq
	PasskeysFinishRegistrationResp = apollo.PasskeysFinishRegistrationResp
	PasskeysStartLoginResp         = apollo.PasskeysStartLoginResp
	PasskeysStartRegistrationReq   = apollo.PasskeysStartRegistrationReq
	PasskeysStartRegistrationResp  = apollo.PasskeysStartRegistrationResp
	PasswordUpdatedDate            = apollo.PasswordUpdatedDate
	RegistrationReq                = apollo.RegistrationReq
	RemovePasskeyReq               = apollo.RemovePasskeyReq
	RemovePasskeyResp              = apollo.RemovePasskeyResp
	RemoveSubsystemTokenReq        = apollo.RemoveSubsystemTokenReq
	RemoveSubsystemTokenResp       = apollo.RemoveSubsystemTokenResp
	SubsystemToken                 = apollo.SubsystemToken
	ThirdPartyAccountInfo          = apollo.ThirdPartyAccountInfo
	ThirdPartyAccounts             = apollo.ThirdPartyAccounts
	ThirdPartyBindReq              = apollo.ThirdPartyBindReq
	ThirdPartyContinueReq          = apollo.ThirdPartyContinueReq
	ThirdPartyContinueResp         = apollo.ThirdPartyContinueResp
	ThirdPartyGetInfoReq           = apollo.ThirdPartyGetInfoReq
	ThirdPartyGetInfoResp          = apollo.ThirdPartyGetInfoResp
	ThirdPartyRemoveReq            = apollo.ThirdPartyRemoveReq
	UserContact                    = apollo.UserContact
	UserInfoReq                    = apollo.UserInfoReq
	UserInfoResp                   = apollo.UserInfoResp
	UserSecurityInfoReq            = apollo.UserSecurityInfoReq
	UserSecurityInfoResp           = apollo.UserSecurityInfoResp
	ValidateSubsystemTokenReq      = apollo.ValidateSubsystemTokenReq
	ValidateSubsystemTokenResp     = apollo.ValidateSubsystemTokenResp

	ThirdParty interface {
		// GetInfo 获取第三方账号绑定信息
		GetInfo(ctx context.Context, in *ThirdPartyGetInfoReq, opts ...grpc.CallOption) (*ThirdPartyGetInfoResp, error)
		// Bind 绑定第三方账号
		Bind(ctx context.Context, in *ThirdPartyBindReq, opts ...grpc.CallOption) (*Empty, error)
		// 继续 - 登录或注册
		Continue(ctx context.Context, in *ThirdPartyContinueReq, opts ...grpc.CallOption) (*ThirdPartyContinueResp, error)
		// HandleCallback 处理第三方回调数据
		HandleCallback(ctx context.Context, in *ThirdPartyContinueReq, opts ...grpc.CallOption) (*ThirdPartyContinueResp, error)
		// Remove 移除第三方账号
		Remove(ctx context.Context, in *ThirdPartyRemoveReq, opts ...grpc.CallOption) (*Empty, error)
	}

	defaultThirdParty struct {
		cli zrpc.Client
	}
)

func NewThirdParty(cli zrpc.Client) ThirdParty {
	return &defaultThirdParty{
		cli: cli,
	}
}

// GetInfo 获取第三方账号绑定信息
func (m *defaultThirdParty) GetInfo(ctx context.Context, in *ThirdPartyGetInfoReq, opts ...grpc.CallOption) (*ThirdPartyGetInfoResp, error) {
	client := apollo.NewThirdPartyClient(m.cli.Conn())
	return client.GetInfo(ctx, in, opts...)
}

// Bind 绑定第三方账号
func (m *defaultThirdParty) Bind(ctx context.Context, in *ThirdPartyBindReq, opts ...grpc.CallOption) (*Empty, error) {
	client := apollo.NewThirdPartyClient(m.cli.Conn())
	return client.Bind(ctx, in, opts...)
}

// 继续 - 登录或注册
func (m *defaultThirdParty) Continue(ctx context.Context, in *ThirdPartyContinueReq, opts ...grpc.CallOption) (*ThirdPartyContinueResp, error) {
	client := apollo.NewThirdPartyClient(m.cli.Conn())
	return client.Continue(ctx, in, opts...)
}

// HandleCallback 处理第三方回调数据
func (m *defaultThirdParty) HandleCallback(ctx context.Context, in *ThirdPartyContinueReq, opts ...grpc.CallOption) (*ThirdPartyContinueResp, error) {
	client := apollo.NewThirdPartyClient(m.cli.Conn())
	return client.HandleCallback(ctx, in, opts...)
}

// Remove 移除第三方账号
func (m *defaultThirdParty) Remove(ctx context.Context, in *ThirdPartyRemoveReq, opts ...grpc.CallOption) (*Empty, error) {
	client := apollo.NewThirdPartyClient(m.cli.Conn())
	return client.Remove(ctx, in, opts...)
}
