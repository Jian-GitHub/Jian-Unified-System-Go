syntax = "proto3";

package apollo;

option go_package = "./apollo";

message Empty {}

// Account
// ========== 注册流程 ==========
message RegistrationReq {
  int64 user_id = 1;
  string email = 2;
  string password = 3;
  string locate = 4;
  string language = 5;
}

// ========== 登录流程 ==========
message LoginReq {
  string email = 1;
  string password = 2;
}

message LoginResp {
  int64 user_id = 1;
  string given_name = 2;
  string middle_name = 3;
  string family_name = 4;
  string avatar = 5;
  string locale = 6;
  string language = 7;
  int64 birthday_year = 8;
  int64 birthday_month = 9;
  int64 birthday_day = 10;
}

// ========== 用户信息 ==========
message UserInfoReq {
  int64 user_id = 1;
}

message UserInfoResp {
  bytes user_bytes = 1;
}

// ========== 用户安全信息 ==========
message UserSecurityInfoReq {
  int64 user_id = 1;
}

message UserContact {
  string id = 1;
  string value = 2;
  int64 type = 3;
  string phone_region = 4;
}
message PasswordUpdatedDate {
  int64 year = 1;
  int64 month = 2;
  int64 day = 3;
}
message ThirdPartyAccounts {
  bool github = 1;
  bool google = 2;
}
message UserSecurityInfoResp {
  repeated UserContact contacts = 1;
  PasswordUpdatedDate password_updated_date = 2;
  int64 account_security_token_num = 3;
  int64 passkeys_num = 4;
  ThirdPartyAccounts third_party_accounts = 5;
}






// ================= 服务定义 =================
service Account {
  // 注册
  // Registration 注册
  rpc Registration (RegistrationReq) returns (Empty);

  // 登录
  // Login 登陆
  rpc Login (LoginReq) returns (LoginResp);

  // 用户信息
  // UserInfo 查询用户通知联系方式
  rpc UserInfo (UserInfoReq) returns (UserInfoResp);

  // 用户安全信息
  // UserSecurityInfo 查询用户通知联系方式
  rpc UserSecurityInfo (UserSecurityInfoReq) returns (UserSecurityInfoResp);

}

// Passkeys
// ========== 注册流程 ==========
message PasskeysStartRegistrationReq {
  int64 user_id = 1;          // API生成
  string user_name = 2;       // API提供
  string display_name = 3;    // API提供
}

message PasskeysStartRegistrationResp {
  bytes options_json = 1;     // WebAuthn标准选项
  bytes session_data = 2;     // 序列化的SessionData（API需存储）
}

message PasskeysFinishRegistrationReq {
  int64 user_id = 1;          // 必须与StartRegistration一致
  bytes credential_json = 2;  // 前端返回的完整认证数据
  bytes session_data = 3;     // 新增：StartRegistration返回的session_data
  string Locate = 4;
  string Language = 5;
  bool type = 6;
  string name = 7;
}

message PasskeysFinishRegistrationResp {
  string passkeys_id = 1;
  string locale = 2;
  string language = 3;
  string passkeys_name = 4;  // 前端返回的完整认证数据
  int64 year = 5;
  int64 month = 6;
  int64 day = 7;
}

// ========== 登录流程 ==========
message PasskeysStartLoginResp {
  bytes options_json = 1;
  bytes session_data = 2; // 必须返回给API存储
}

message PasskeysFinishLoginReq {
  string credential_json = 1;  // 前端原始JSON
  string session_data_json = 2;    // StartLogin返回的session_data
}

message PasskeysFinishLoginResp {
  int64 user_id = 1;
  string given_name = 2;
  string middle_name = 3;
  string family_name = 4;
  string avatar = 5;
  string locale = 6;
  string language = 7;
  int64 birthday_year = 8;
  int64 birthday_month = 9;
  int64 birthday_day = 10;
}

// Passkey
message Passkey {
  string id = 1;
  string name = 2;
  int64 year = 3;
  int64 month = 4;
  int64 day = 5;
  bool is_enabled = 6;
}

// ========== 查询 Passkeys ==========
message FindTenPasskeysReq {
  int64 user_id = 1;
  int64 page = 2;
}

message FindTenPasskeysResp {
  repeated Passkey passkeys = 1;
}

// ========== 移除 Passkey ==========
message RemovePasskeyReq {
  int64 user_id = 1;
  string passkey_id = 2;
}

message RemovePasskeyResp {
  bool success = 1;
}
// ================= 服务定义 =================
service Passkeys {
  // 注册
  // StartRegistration 注册第一步 - 开始
  rpc StartRegistration (PasskeysStartRegistrationReq) returns (PasskeysStartRegistrationResp);
  // FinishRegistration 注册第二步 - 完成
  rpc FinishRegistration (PasskeysFinishRegistrationReq) returns (PasskeysFinishRegistrationResp);

  // 登录
  // StartLogin 登陆第一步 - 开始
  rpc StartLogin (Empty) returns (PasskeysStartLoginResp);
  // FinishLogin 登陆第二步 - 完成 返回用户id
  rpc FinishLogin (PasskeysFinishLoginReq) returns (PasskeysFinishLoginResp);

  // FindTenPasskeys 查询 10 个Passkeys
  rpc FindTenPasskeys (FindTenPasskeysReq) returns (FindTenPasskeysResp);

  // RemovePasskey 移除 Passkey
  rpc RemovePasskey (RemovePasskeyReq) returns (RemovePasskeyResp);
}



// Third-Party
message ThirdPartyAccountInfo {
  int64 id = 1;
  string provider = 2;
  string content = 3;
}
// ========== 查询流程 ==========
message ThirdPartyGetInfoReq {
  int64 user_id = 1;
}
message ThirdPartyGetInfoResp {
  repeated ThirdPartyAccountInfo accounts = 1;
}
// ========== 绑定流程 ==========
message ThirdPartyBindReq {
//  int64 user_id = 1;          // API生成
  bytes token = 1;
//  string raw_data_json = 2;       // API提供
}

// ========== 继续流程 ==========
message ThirdPartyContinueReq {
//  int64 id = 1;
  string provider = 1;
  bytes token = 2;
  string redis_data_json = 3;
}

message ThirdPartyContinueResp {
  int64 user_id = 1;       // API提供
}

message ThirdPartyRemoveReq {
  int64 user_id = 1;
  int64 third_party_id = 2;
}

// ================= 服务定义 =================
service ThirdParty {
  // GetInfo 获取第三方账号绑定信息
  rpc GetInfo (ThirdPartyGetInfoReq) returns (ThirdPartyGetInfoResp);
  // Bind 绑定第三方账号
  rpc Bind (ThirdPartyBindReq) returns (Empty);
  // 继续 - 登录或注册
  // Continue 使用第三方账号继续 - 登录或注册 返回用户id
  rpc Continue (ThirdPartyContinueReq) returns (ThirdPartyContinueResp);

  // HandleCallback 处理第三方回调数据
  rpc HandleCallback (ThirdPartyContinueReq) returns (ThirdPartyContinueResp);
  // Remove 移除第三方账号
  rpc Remove (ThirdPartyRemoveReq) returns (Empty);
}

// ========== 生成子系统令牌 ==========
message GenerateSubsystemTokenReq {
  int64 user_id = 1;
  string name = 2;
  bytes scope = 3;
}

message GenerateSubsystemTokenResp {
  SubsystemToken token = 1;
}

// 子系统令牌
message SubsystemToken {
  string id = 1;
  string value = 2;
  string name = 3;
  int64 year = 4;
  int64 month = 5;
  int64 day = 6;
}

// ========== 验证子系统令牌 ==========
message ValidateSubsystemTokenReq {
  int64 user_id = 1;
  int64 token_id = 2;
}

message ValidateSubsystemTokenResp {
  bool validated = 1;
}

// ========== 移除子系统令牌 ==========
message RemoveSubsystemTokenReq {
  string token_id = 1;
}

message RemoveSubsystemTokenResp {
  bool validated = 1;
}

// ========== 查询子系统令牌 ==========
message FindTenSubsystemTokensReq {
  int64 user_id = 1;
  int64 page = 2;
}

message FindTenSubsystemTokensResp {
  repeated SubsystemToken tokens = 1;
}

service Security {
  // GenerateSubsystemToken 生成子系统令牌
  // GenerateSubsystemToken 生成可调用子系统的令牌
  rpc GenerateSubsystemToken (GenerateSubsystemTokenReq) returns (GenerateSubsystemTokenResp);

  // ValidateSubsystemToken 验证子系统令牌
  // ValidateToken 验证可调用子系统的令牌
  rpc ValidateSubsystemToken (ValidateSubsystemTokenReq) returns (ValidateSubsystemTokenResp);

  // RemoveSubsystemToken 移除子系统令牌
  // RemoveSubsystemToken 验证可调用子系统的令牌
  rpc RemoveSubsystemToken (RemoveSubsystemTokenReq) returns (RemoveSubsystemTokenResp);

  // FindTenSubsystemTokens 查询 10 个子系统令牌
  rpc FindTenSubsystemTokens (FindTenSubsystemTokensReq) returns (FindTenSubsystemTokensResp);
}
